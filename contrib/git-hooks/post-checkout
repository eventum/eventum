#!/bin/sh
# https://git-scm.com/docs/githooks
#
# This is hook that updates composer
# if branch change included change in composer.json
#
# additionally, if vendor dir is under (separate!) git repo,
# the result can be speed up by switching and keeping git branch up to date
# there as well.

# to install this hook:
#  copy it to .git/hooks/post-checkout of project root
#
# Author: Elan Ruusam√§e <glen@pld-linux.org>
# Date: 2016-02-18

# enable for debug log
#exec 2>.post-checkout.log; set -x

old_ref=$1
new_ref=$2
flag=$3

checkout_vendor() {
	# skip this if vendor is not git repo
	test -d vendor/.git || return

	cd vendor
	# switch branch if exists
	if [ -n "$(git branch --list $branch)" ]; then
		git checkout $branch
	else
		# otherwise create the branch
		git checkout -b $branch
		git add -A .
		git commit -am "created branch $branch"
	fi
	# restore copy of lock
	test -f composer.lock && cp -f composer.lock ..
	cd ..
}

checkin_vendor() {
	# skip this if vendor is not git repo
	test -d vendor/.git || return

	# take copy of lock
	cp -p composer.lock vendor

	cd vendor
	git add -A .
	git commit -am "updated branch $branch"
	cd ..
}

update_composer() {
	local c

	c=$(git diff $old_ref..$new_ref --name-only -- composer.json)
	test "$c" = "composer.json" || return
	echo "[post-checkout] composer.json changed"

	branch=$(git rev-parse --abbrev-ref HEAD)

	# rm lock, so if there's no lock from vendor dir we do "composer update"
	rm composer.lock

	checkout_vendor
	composer install
	checkin_vendor
}

# file checkout, nothing to do
[ "$flag" = "0" ] && exit 0

update_composer
exit 0
